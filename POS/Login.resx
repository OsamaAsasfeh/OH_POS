<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAFylJREFUeF7t
        nQeYFMW6hvder8eDx6woooBEQXJOkpMEAQUUMKCCqCCKiCiKCUVcFBFBkCwKiAhIzjlHySI5CKvkJBn5
        b30/3YeB7a2ZXXe3Z3a/93nqWWamq7eWqbcrV0WJSIwJxxkYGGKFGAhCCIkDCAJTCCGxOU5BCIkbCkKI
        BQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKI
        BQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKI
        BQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQoSyLlz5+T0mTNy
        4cIF5x2Sykl9guz9c5/MWbRMvvluuHTs1kteaPe+NHjhNan9bEup2qiZVGjwjFR/srk80rSVNG7ZVl77
        4FOJ/rq/DPt5gqxav1FOnjrt3Cl5OHX6jBw8clSOHDsedzh6TA6ZayB3UnPs+Ak5fOSYdzqccNik56j5
        +ffFi06siCV1CLJ24ybp3v87ebJVOyla4zHJULSipM1bWm7NVVzSFSgjGYtWkvuKV5aspapKttIPSZaS
        VfV1hiIV5I68peTWB0rIXfkf1M8qPf6ctHz7I/l58gw5cOiw8xuSjj5DRkj2Bx9ScSvGESrUbyL3l6ku
        34742YmVNJw/f8E8TFpLoWr1PdPhhqI1GsjDTVqotBFOyhXk9Jmz+tR/9PlXJFupairD3QXLSs6yNaVg
        1UfNl1xPCj9UP+SA6/NVrqvyQK7b85TU99t8EC1LV611fmviE92rv1yTIY9kNb83W+lqngFiX5sxr3zV
        /3snVtIAQUrXaSy35S7hmQ43pM1XWv+Pk+MBksSkTEEG/DBKypun6u25S5oSoqzkrVRHilRvECvTJzS4
        98rxYHUV775ilaTp6x1kxdoNTgoSj+4Dvpc78pSyCo3P7jTS9vn+RydW0gBBHnrieX1IeKXDDSjxytV7
        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
        CHZT+T/TVli+ep3zzmVcQdwqFTJwydqN9N9e5KlQW2o1uXT+IUomL0EOHTmqm91dLYjLjt/3aFsM7Rxs
        vh3X4UKpBAoSyL8y5dMDdMBY8wTG6HiX3gP0dSCjJ0/Xzdy+7DdYX/+3F2vGJUE69+irT+GtplEcyO6Y
        GD2Grf+wkc47OAh0lrYr0Ci+muFjL7VBXHmwJVHUdXfJdz+N0deB9Bw0VNM0fNwkfY02SEIEcfm0Zz+T
        rqypffpM6hMEffuoc7/45gcyatI0mWfq25NnzZfn276rXao/jp/sXCnSon1HzXTPtnlHB/TQoEYXbtTN
        GfWkWuw0CLAhHeKOnjRdX6/buFmuMQ3vQlXryZipM7UKhkZ0x269NNP1HDRMrwPbd/1uqmql9LgEVJ/e
        +qSr9DCZHaAUiLopoymhLmVyjIc82rSV9jq1fr+zdiBg50hIHZUmnTR5tb1eB74dMUY7Euab0jEQDDqi
        avhCuw/0NXrSytdvYqpYw3WMB6UpSjj0rJV4uJGcPsMSJFUJggG0lm9/dKmrtuClMwsxVoDxBNTDr6ZL
        rwH6GbbUxDgCToyCJOimdZljGthp85Q2os1z3hGZNHu+5CxXU++N34WDR7OWrCal6jwh0+deOdiIeNjL
        9t7C5XU8oqSp2gBk2FtyFo+1k2OH6O7aTY1xEwwyYvyiU/c+zqeXgFz4vRh7CQRtEIyzoA0F0EWdq1wt
        FQL3hDy4Z/UnmscqAVMhqbeKhd4bPL3xdEeD3VbXxmfIpMtMVefqdgW4YEol9A55jTz/umWbjmOgHbE/
        YBDSC4xV4D4YcQe4H15f8BhJx9jNcpP2lWs2mOtPOe9e5tz583o/DAQGArExfoLxn0DQ47b+ty36N+Jg
        U6KwDUKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUK
        QogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUK
        QogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUK
        QogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUKQogFCkKIBQpCiAUK
        QogFCkKIBQpCiAUKQogFCkKIBQpCiAUVhBASBxAkxgSUIgwMDFcEifl/ZQ5JueGONccAAAAASUVORK5C
        YII=
</value>
  </data>
</root>